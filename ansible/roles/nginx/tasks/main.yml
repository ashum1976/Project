---
# # tasks file for ./ansible/roles/nginx
# - name: "Выполнение общих задач для всех хостов"
#   include_role:
#     name: common
#   tags: srvweb
#
#
# ################SELinux разрешить доступ sebool#################
# # setsebool -P httpd_can_network_connect_db 1
# # setsebool -P httpd_setrlimit 1
#
# - name: Set httpd_can_network_connect_db разрешить коннект к базе данных
#   seboolean:
#     name: httpd_can_network_connect_db
#     state: yes
#     persistent: yes
#   tags: srvweb
#
# - name: Set httpd_setrlimit nginx разрешить устанавливать(изменять) количество открытых файлов
#   seboolean:
#     name: httpd_setrlimit
#     state: yes
#     persistent: yes
#   tags: srvweb
#
#####################################END########################################

# ###################rsyslog#######################

- name: Display all  variables/facts known for a host
  debug:
    var:  ipv4_firewall
  tags: srvweb



# - name: "Копирование основного файла конфигурации rsyslog"
#   template:
#     src: 05_client_gconf.conf.j2
#     dest: /etc/rsyslog.d/05_client_gconf.conf
#     owner: root
#     group: root
#     mode: 0644
#   # register: last_result
#   tags: srvweb
#
# - name: "Копирование файла auth, priv, audit, secure логи"
#   template:
#     src: 05_client_audit_auth_log.conf.j2
#     dest: /etc/rsyslog.d/05_client_audit_auth_log.conf
#     owner: root
#     group: root
#     mode: 0644
#   # register: last_result
#   tags: srvweb
#
# - name: "Копирование файла nginx логи"
#   template:
#     src: 05_client_nginx.conf.j2
#     dest: /etc/rsyslog.d/05_client_nginx.conf
#     owner: root
#     group: root
#     mode: 0644
#   # register: last_result
#   tags: srvweb


####################################################

# # Установить пакет, percona и запустить"
# - name: "Установить пакет percona"
#   dnf:
#     name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
#     state: present
#     disable_gpg_check:  yes
#   tags: srvweb
#
# # https://www.percona.com/doc/percona-server/LATEST/installation/yum_repo.html Включить репозиторий percona 8 версии, после этого поставить пакеты для работы.
# - name: "Enable Percona repository (Percona version >= 8)"
#   command: "percona-release setup ps80 -y"
#   tags: srvweb
#
# ## Установить пакеты, спецефические для данного хоста . Переменная создана в host_vars.
# - name: "Установить пакеты необходимые только для {{ ansible_facts['hostname']}} "
#   dnf:
#     name: "{{ dnf_install_host }}"
#     state: present
#     disable_gpg_check:  yes
#   when: dnf_install_host is defined
    # tags: srvweb
#
# - name: "Создание группы для пользователя"
#   group:
#     name:  "{{ wp_work_group }}"
#     state: present
#   tags: srvweb
#
# - name: "Создание пользователя для wordpress"
#   user:
#     name: "{{ wp_work_user }}"
#     group: "{{ wp_work_group }}"
#     home: "{{ wp_work_home }}"
#     password: "{{ hash_passwd }}"
#     generate_ssh_key: yes
#     ssh_key_bits: 4096
#     ssh_key_file: .ssh/id_ed25519
#     ssh_key_type: ed25519
#   tags: srvweb
#
# - name: "Переименовать исходный каталог nginx"
#   command: mv /etc/nginx /etc/nginx_backup
#   tags: srvweb
#
# #
# # - name: "Удалить папку nginx"
# #   file:
# #     path: /etc/nginx
# #     state: absent
# #   tags: srvweb
#
# - name: "Скопировать файлы настроек для запуска nginx"
#   copy:
#     directory_mode:
#     src: nginx_conf/
#     dest: /etc/nginx
#     # mode: 0750
#   tags: srvweb
#
# #Настройка файлов конфигурации для запуска nginx-a
# ##Создать директорию для ssl сертификатов
# - name: "Create dir for nginx ssl certificats  "
#   file:
#     path: "{{ ssl_cert_path }}"
#     state: directory
#     owner: root
#     group: root
#     mode: 0750
#   tags: srvweb
#
# ## Создание самоподписанного сертификата и ключа
# - name: "Генерация закрытого ключа"
#   openssl_privatekey:
#     path: "{{ key_file }}"
#     size: "{{ key_size }}"
#     type: "{{ key_type }}"
#     backup: yes
#   tags: srvweb
#
# - name: "Генерация запроса на подпись сертификата OpenSSL"
#   openssl_csr:
#     path: "{{ csr_path }}"
#     privatekey_path: "{{ key_file }}"
#     country_name: "{{ country_name }}"
#     organization_name: "{{ organization_name }}"
#     email_address: "{{ email_address }}"
#     common_name: "{{ server_hostname }}"
#   tags: srvweb
#
# - name: "Генерация самоподписанного сертификата"
#   openssl_certificate:
#     path: "{{ cert_file }}"
#     privatekey_path: "{{ key_file }}"
#     csr_path: "{{ csr_path }}"
#     provider: selfsigned
#   tags: srvweb
#
# ## Создать корневую директорию для  wordpress
# - name: "Create root dir for nginx project.loc wordpress"
#   file:
#     path: "{{ nginx_root_path }}/wordpress"
#     state: directory
#     owner: "{{ wp_work_user }}"
#     group: "{{ wp_work_group }}"
#     mode: 0755
#   tags: srvweb
#
# ## ссылка на дефолтный файл конфигурации nginx-a
# - name: "Symlink на дефолтные параметры"
#   file:
#     src: /etc/nginx/sites-available/default
#     dest: /etc/nginx/sites-enabled/default
#     state: link
#   tags: srvweb
#
# # Создание основного файла конфигурации  nginx-a
# - name: "Копирование основонго файла конфигурации"
#   template:
#     src: project.loc.j2
#     dest: /etc/nginx/sites-enabled/{{ domain_name }}
#     owner: root
#     group: root
#     mode: 0644
#   register: last_result
#   tags: srvweb
#
# - name: "Подключаем роль wdprs "
#   include_role:
#     name: wdprs
#   tags: srvweb
#
# ## Прроверка файла конфигурации nginx
# - name: "Check NGINX configs"
#   shell: "/usr/sbin/nginx -t"
#   register: nginx_config_status
#   when: last_result.changed
#   tags: srvweb
#
# ## Показать код возврата
# - name: "NGINX test status"
#   debug:
#     msg: "{{ nginx_config_status.rc }}"
#   when: last_result.changed
#   tags: srvweb
#
# ## Включить в автозагрузку и запустить nginx on srvweb
# - name: "Service NGINX restart and enable on boot"
#   systemd:
#     daemon_reload: yes
#     name: nginx
#     state: restarted
#     enabled: yes
#   when: nginx_config_status.rc == 0
#   tags: srvweb
#
# ## Включить в автозагрузку и запустить nginx on srvweb
# - name: Enable and started nginx_port
#   systemd:
#     name: nginx
#     state: started
#     #state: stopped
#     enabled: yes
#   tags: srvweb
